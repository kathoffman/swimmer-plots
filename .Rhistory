ggplot() +
geom_line(aes(x=day, y=id_sorted, col = intubation_status, group=id_sorted),
size=1.8) +
geom_point(aes(x=steroids_this_day, y=id_sorted, col="Steroids", shape="Steroids"), stroke=2) +
geom_point(aes(x=severe_this_day, y=id_sorted, col="Severe hypoxia", shape="Severe hypoxia"), size=2, stroke=1.5) +
geom_point(aes(x=death_this_day, y=id_sorted, col="Death", shape="Death"), size=2, stroke=1.5) +
theme_bw() +
scale_color_manual(values = cols, name="Patient Status") +
scale_shape_manual(values = shapes, name = "Patient Status") +
guides(color = guide_legend(
override.aes = list(
shape = shape_override,
linetype = line_override)
),
shape = "none"
)+
labs(x="Days since hospitalization",y="Patient\nnumber",title="Treatment Timeline for N=30 Patients") +
scale_x_continuous(expand=c(0,0)) + # remove extra white space
theme(text=element_text(family="Poppins", size=11),
title = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.y = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.x = element_text(size=15, face="bold", vjust=-0.5, hjust=0),
axis.text.y = element_text(size=6, hjust=1.5),
axis.ticks.y = element_blank(),
legend.position = c(0.8, 0.3),
legend.title = element_text(colour="black", size=13, face=4),
legend.text = element_text(colour="black", size=10),
legend.background = element_rect(size=0.5, linetype="solid", colour ="gray30"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()
)
dat_swim |>
ggplot() +
geom_line(aes(x=day, y=id_sorted, col = intubation_status, group=id_sorted),
size=1.8) +
geom_point(aes(x=steroids_this_day, y=id_sorted, col="Steroids"), stroke=2) +
geom_point(aes(x=severe_this_day, y=id_sorted, col="Severe hypoxia"), size=2, stroke=1.5) +
geom_point(aes(x=death_this_day, y=id_sorted, col="Death"), size=2, stroke=1.5) +
theme_bw() +
scale_color_manual(values = cols, name="Patient Status") +
scale_shape_manual(values = shapes, name = "Patient Status") +
guides(color = guide_legend(
override.aes = list(
shape = shape_override,
linetype = line_override)
),
shape = "none"
)+
labs(x="Days since hospitalization",y="Patient\nnumber",title="Treatment Timeline for N=30 Patients") +
scale_x_continuous(expand=c(0,0)) + # remove extra white space
theme(text=element_text(family="Poppins", size=11),
title = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.y = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.x = element_text(size=15, face="bold", vjust=-0.5, hjust=0),
axis.text.y = element_text(size=6, hjust=1.5),
axis.ticks.y = element_blank(),
legend.position = c(0.8, 0.3),
legend.title = element_text(colour="black", size=13, face=4),
legend.text = element_text(colour="black", size=10),
legend.background = element_rect(size=0.5, linetype="solid", colour ="gray30"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()
)
dat_swim |>
ggplot() +
geom_line(aes(x=day, y=id_sorted, col = intubation_status, group=id_sorted),
size=1.8) +
geom_point(aes(x=steroids_this_day, y=id_sorted, col="Steroids"), shape=16, stroke=2) +
geom_point(aes(x=severe_this_day, y=id_sorted, col="Severe hypoxia", shape="Severe hypoxia"), size=2, stroke=1.5) +
geom_point(aes(x=death_this_day, y=id_sorted, col="Death", shape="Death"), size=2, stroke=1.5) +
theme_bw() +
scale_color_manual(values = cols, name="Patient Status") +
scale_shape_manual(values = shapes, name = "Patient Status") +
guides(color = guide_legend(
override.aes = list(
shape = shape_override,
linetype = line_override)
),
shape = "none"
)+
labs(x="Days since hospitalization",y="Patient\nnumber",title="Treatment Timeline for N=30 Patients") +
scale_x_continuous(expand=c(0,0)) + # remove extra white space
theme(text=element_text(family="Poppins", size=11),
title = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.y = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.x = element_text(size=15, face="bold", vjust=-0.5, hjust=0),
axis.text.y = element_text(size=6, hjust=1.5),
axis.ticks.y = element_blank(),
legend.position = c(0.8, 0.3),
legend.title = element_text(colour="black", size=13, face=4),
legend.text = element_text(colour="black", size=10),
legend.background = element_rect(size=0.5, linetype="solid", colour ="gray30"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()
)
dat_swim |>
ggplot() +
geom_line(aes(x=day, y=id_sorted, col = intubation_status, group=id_sorted),
size=1.8) +
geom_point(aes(x=steroids_this_day, y=id_sorted, col="Steroids"), shape=16, stroke=2) +
geom_point(aes(x=severe_this_day, y=id_sorted, col="Severe hypoxia"), shape=21, size=2, stroke=1.5) +
geom_point(aes(x=death_this_day, y=id_sorted, col="Death", shape="Death"), shape=4, size=2, stroke=1.5) +
theme_bw() +
scale_color_manual(values = cols, name="Patient Status") +
scale_shape_manual(values = shapes, name = "Patient Status") +
guides(color = guide_legend(
override.aes = list(
shape = shape_override,
linetype = line_override)
),
shape = "none"
)+
labs(x="Days since hospitalization",y="Patient\nnumber",title="Treatment Timeline for N=30 Patients") +
scale_x_continuous(expand=c(0,0)) + # remove extra white space
theme(text=element_text(family="Poppins", size=11),
title = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.y = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.x = element_text(size=15, face="bold", vjust=-0.5, hjust=0),
axis.text.y = element_text(size=6, hjust=1.5),
axis.ticks.y = element_blank(),
legend.position = c(0.8, 0.3),
legend.title = element_text(colour="black", size=13, face=4),
legend.text = element_text(colour="black", size=10),
legend.background = element_rect(size=0.5, linetype="solid", colour ="gray30"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()
)
dat_swim |>
ggplot() +
geom_line(aes(x=day, y=id_sorted, col = intubation_status, group=id_sorted),
size=1.8) +
geom_point(aes(x=steroids_this_day, y=id_sorted, col="Steroids"), shape=15, stroke=2) +
geom_point(aes(x=severe_this_day, y=id_sorted, col="Severe hypoxia"), shape=21, size=2, stroke=1.5) +
geom_point(aes(x=death_this_day, y=id_sorted, col="Death", shape="Death"), shape=4, size=2, stroke=1.5) +
theme_bw() +
scale_color_manual(values = cols, name="Patient Status") +
scale_shape_manual(values = shapes, name = "Patient Status") +
guides(color = guide_legend(
override.aes = list(
shape = shape_override,
linetype = line_override)
),
shape = "none"
)+
labs(x="Days since hospitalization",y="Patient\nnumber",title="Treatment Timeline for N=30 Patients") +
scale_x_continuous(expand=c(0,0)) + # remove extra white space
theme(text=element_text(family="Poppins", size=11),
title = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.y = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.x = element_text(size=15, face="bold", vjust=-0.5, hjust=0),
axis.text.y = element_text(size=6, hjust=1.5),
axis.ticks.y = element_blank(),
legend.position = c(0.8, 0.3),
legend.title = element_text(colour="black", size=13, face=4),
legend.text = element_text(colour="black", size=10),
legend.background = element_rect(size=0.5, linetype="solid", colour ="gray30"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()
)
shape_override <- c(21, NA, NA, 15, 4)
shape_override <- c(21, NA, NA, 15, 4) # order matches `cols`:severe, intubation (yes/no), steroids, death
line_override <- c(NA,1,1,NA,NA) # order matches `cols`:severe, intubation (yes/no), steroids, death
stroke_override <- c(.8,1,1,1,1) # order matches `cols`:severe, intubation (yes/no), steroids, death
size_override <- c(2.5,2.5,2.6,2,2) # order matches `cols`:severe, intubation (yes/no), steroids, death
# modify swimmer data to 1) only show events if yes 2) have an id ordered by max follow up
dat_swim <-
dat_long |>
mutate(severe_this_day = case_when(severe == 1 ~ day),
steroids_this_day = case_when(steroids == 1 ~ day),
death_this_day = case_when(death == 1 ~ day)) %>%
group_by(id) |>
mutate(max_day = max(day)) |>
ungroup() |>
nest(cols = day:death_this_day) |>
arrange(max_day) |>
mutate(id_sorted = factor(row_number())) |>
unnest()
dat_swim |>
ggplot() +
geom_line(aes(x=day, y=id_sorted, col = intubation_status, group=id_sorted),
size=1.8) +
geom_point(aes(x=steroids_this_day, y=id_sorted, col="Steroids"), shape=15, stroke=2) +
geom_point(aes(x=severe_this_day, y=id_sorted, col="Severe hypoxia"), shape=21, size=2, stroke=1.5) +
geom_point(aes(x=death_this_day, y=id_sorted, col="Death", shape="Death"), shape=4, size=2, stroke=1.5) +
theme_bw() +
scale_color_manual(values = cols, name="Patient Status") +
scale_shape_manual(values = shapes, name = "Patient Status") +
guides(color = guide_legend(
override.aes = list(
shape = shape_override,
linetype = line_override)
),
shape = "none"
)+
labs(x="Days since hospitalization",y="Patient\nnumber",title="Treatment Timeline for N=30 Patients") +
scale_x_continuous(expand=c(0,0)) + # remove extra white space
theme(text=element_text(family="Poppins", size=11),
title = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.y = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.x = element_text(size=15, face="bold", vjust=-0.5, hjust=0),
axis.text.y = element_text(size=6, hjust=1.5),
axis.ticks.y = element_blank(),
legend.position = c(0.8, 0.3),
legend.title = element_text(colour="black", size=13, face=4),
legend.text = element_text(colour="black", size=10),
legend.background = element_rect(size=0.5, linetype="solid", colour ="gray30"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()
)
dat_swim %>%
ggplot(aes(y=id_sorted, group=id_sorted)) +
theme_bw() + #BREAK
geom_line(aes(x=day, col = intubation_status),
size=1.8) +#BREAK
geom_point(aes(x=steroids_this_day),
stroke=2,
shape = 15) +#BREAK
geom_point(aes(x=severe_this_day),
size=2,
col="red",
stroke=1.5,
shape = 21) +#BREAK
geom_point(aes(x=death_this_day),
size=2,
col="blue",
stroke=1.5,
shape = 4)
dat_swim %>%
ggplot(aes(y=id_sorted, group=id_sorted)) +
theme_bw() + #BREAK
geom_line(aes(x=day, col = intubation_status),
size=1.8) +#BREAK
geom_point(aes(x=steroids_this_day),
stroke=2,
shape = 15) +#BREAK
geom_point(aes(x=severe_this_day),
size=2,
col="red",
stroke=1.5,
shape = 21) +#BREAK
geom_point(aes(x=death_this_day),
size=2,
col="blue",
stroke=1.5,
shape = 4)
dat_swim %>%
ggplot(aes(y=id_sorted, group=id_sorted)) +
theme_bw() + #BREAK
geom_line(aes(x=day, col = intubation_status),
size=1.8) +#BREAK
geom_point(aes(x=steroids_this_day),
stroke=2,
shape = 15) +#BREAK
geom_point(aes(x=severe_this_day,col="red"),
size=2,
stroke=1.5,
shape = 21) +#BREAK
geom_point(aes(x=death_this_day),
size=2,
stroke=1.5,
shape = 4)
dat_swim %>%
ggplot(aes(y=id_sorted, group=id_sorted)) +
theme_bw() + #BREAK
geom_line(aes(x=day, col = intubation_status),
size=1.8) +#BREAK
geom_point(aes(x=steroids_this_day),
stroke=2,
shape = 15) +#BREAK
geom_point(aes(x=severe_this_day,col="red"),
size=2,
stroke=1.5,
shape = 21) +#BREAK
geom_point(aes(x=death_this_day),
size=2,
stroke=1.5,
shape = 4)
dat_swim %>%
ggplot(aes(y=id_sorted, group=id_sorted)) +
theme_bw() +
geom_line(aes(x=day, col = intubation_status),
size=1.8) +
geom_point(aes(x=severe_this_day),
size=2,
stroke=1.5,
shape = 21) + #ROTATE
geom_point(aes(x=severe_this_day, col="#b24745"),
size=2,
stroke=1.5,
shape = 21) + #ROTATE
geom_point(aes(x=severe_this_day),
col="#b24745",
size=2,
stroke=1.5,
shape = 21)  #ROTATE
dat_swim %>%
ggplot(aes(y=id_sorted, group=id_sorted)) +
theme_bw() + #BREAK
geom_line(aes(x=day, col = intubation_status),
size=1.8) +c#BREAK
dat_swim |>
ggplot() +
geom_line(aes(x=day, y=id_sorted, col = intubation_status, group=id_sorted),
size=1.8) +
geom_point(aes(x=steroids_this_day, y=id_sorted, col="Steroids"), shape=15, stroke=2) +
geom_point(aes(x=severe_this_day, y=id_sorted, col="Severe hypoxia"), shape=21, size=2, stroke=1.5) +
geom_point(aes(x=death_this_day, y=id_sorted, col="Death", shape="Death"), shape=4, size=2, stroke=1.5) +
theme_bw() +
scale_color_manual(values = cols, name="Patient Status") +
scale_shape_manual(values = shapes, name = "Patient Status") +
guides(color = guide_legend(
override.aes = list(
shape = shape_override,
linetype = line_override)
)
)+
labs(x="Days since hospitalization",y="Patient\nnumber",title="Treatment Timeline for N=30 Patients") +
scale_x_continuous(expand=c(0,0)) + # remove extra white space
theme(text=element_text(family="Poppins", size=11),
title = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.y = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.x = element_text(size=15, face="bold", vjust=-0.5, hjust=0),
axis.text.y = element_text(size=6, hjust=1.5),
axis.ticks.y = element_blank(),
legend.position = c(0.8, 0.3),
legend.title = element_text(colour="black", size=13, face=4),
legend.text = element_text(colour="black", size=10),
legend.background = element_rect(size=0.5, linetype="solid", colour ="gray30"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()
)
dat_swim %>%
ggplot(aes(y=id_sorted)) +
theme_bw() +
geom_line(aes(x=day,
col = intubation_status,
group=id_sorted),
size=1.8) +
geom_point(aes(x=steroids_this_day,
col="Steroids"),
stroke=2,
shape=15) +
geom_point(aes(x=severe_this_day,
col="Severe hypoxia"),
size=2,
stroke=1.5,
shape=21) +
geom_point(aes(x=death_this_day,
col="Death"),
size=2,
stroke=1.5,
shape=4) +
scale_color_manual(values = cols,
name="Patient Status") + #BREAK
guides(color = guide_legend(
override.aes = list(
stroke = stroke_override,
size = size_override,
shape = shape_override,
linetype = line_override)
))
p + labs(x="Days since hospitalization",
y="Patient\nnumber",
title="Treatment Timeline for N=30 Patients") + #BREAK
scale_x_continuous(expand=c(0,0)) + #BREAK
theme(text=element_text(family="Poppins", size=11)) +
theme(title = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.y = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.x = element_text(size=15, face="bold", vjust=-0.5, hjust=0),
axis.text.y = element_text(size=6, hjust=1.5),
axis.ticks.y = element_blank(),
legend.position = c(0.8, 0.3),
legend.title = element_text(colour="black", size=13, face=4),
legend.text = element_text(colour="black", size=10),
legend.background = element_rect(size=0.5, linetype="solid", colour ="gray30"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()
)
dat_swim %>%
ggplot(aes(y=id_sorted)) +
theme_bw() +
geom_line(aes(x=day,
col = intubation_status,
group=id_sorted),
size=1.8) +
geom_point(aes(x=steroids_this_day,
col="Steroids"),
stroke=2,
shape=15) +
geom_point(aes(x=severe_this_day,
col="Severe hypoxia"),
size=2,
stroke=1.5,
shape=21) +
geom_point(aes(x=death_this_day,
col="Death"),
size=2,
stroke=1.5,
shape=4) +
scale_color_manual(values = cols,
name="Patient Status") + #BREAK
guides(color = guide_legend(
override.aes = list(
stroke = stroke_override,
size = size_override,
shape = shape_override,
linetype = line_override)
)) -> # BREAK
p
p + labs(x="Days since hospitalization",
y="Patient\nnumber",
title="Treatment Timeline for N=30 Patients") + #BREAK
scale_x_continuous(expand=c(0,0)) + #BREAK
theme(text=element_text(family="Poppins", size=11)) +
theme(title = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.y = element_text(angle = 0, vjust=.5, size=12, face="bold"),
axis.title.x = element_text(size=15, face="bold", vjust=-0.5, hjust=0),
axis.text.y = element_text(size=6, hjust=1.5),
axis.ticks.y = element_blank(),
legend.position = c(0.8, 0.3),
legend.title = element_text(colour="black", size=13, face=4),
legend.text = element_text(colour="black", size=10),
legend.background = element_rect(size=0.5, linetype="solid", colour ="gray30"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()
)
->
dat_reorder <-
dat_long |>
group_by(id) |>
mutate(max_day = max(day)) |>
mutate(id = fct_reorder(factor(id), max_day))
library(xaringanthemer)
library(fontawesome)
library(kableExtra)
style_mono_accent(
base_color = "#1e90ff",
header_font_google = google_font("Josefin Sans"),
text_font_google   = google_font("Montserrat", "300", "300i"),
code_font_google   = google_font("Fira Mono")
)
# This is the recommended set up for flipbooks
# you might think about setting cache to TRUE as you gain practice --- building flipbooks from scratch can be time consuming
knitr::opts_chunk$set(fig.width = 9, message = FALSE, warning = FALSE, comment = "", cache = T)
library(flipbookr)
library(tidyverse)
library(rmarkdown)
knitr::include_graphics("img/swimmer.png")
knitr::include_graphics("img/swimmer_swimplot.png")
knitr::include_graphics("img/swimmer.png")
library(tidyverse)
library(data.table)
dat_long <- read_csv("https://raw.githubusercontent.com/kathoffman/steroids-trial-emulation/main/data/dat_trt_timeline.csv",col_types = list(id  = "c", steroids = "c", death = "c", severe = "c"))
dat_long |> data.table()
dat_reorder <-
dat_long |>
group_by(id) |>
mutate(max_day = max(day)) |>
mutate(id = fct_reorder(factor(id), max_day))
# ungroup() |>
# nest(cols = day:severe) |>
# arrange(max_day) |>
# mutate(id_sorted = factor(row_number())) |>
# unnest(c(cols)) |>
# select(id_sorted, everything(), -id,-max_day)
dat_reorder |>
select(id, day, death) |>
mutate(death_this_day =
case_when(death == 1 ~ day)) |>
data.table()
# data set with *_this_day columns for all statuses
dat_swim <-
dat_reorder |>
mutate(severe_this_day =
case_when(severe == 1 ~ day),
steroids_this_day =
case_when(steroids == 1 ~ day),
death_this_day =
case_when(death == 1 ~ day))
dat_swim |>
paged_table()
# data set with *_this_day columns for all statuses
dat_swim <-
dat_reorder |>
mutate(severe_this_day =
case_when(severe == 1 ~ day),
steroids_this_day =
case_when(steroids == 1 ~ day),
death_this_day =
case_when(death == 1 ~ day))
dat_swim |>
paged_table()
dat_swim %>%
ggplot(aes(y=id, group=id)) + #BREAK
theme_bw() + #BREAK
geom_line(aes(x=day, col = intubation_status)) +#BREAK
geom_point(aes(x=steroids_this_day)) +#BREAK
geom_point(aes(x=severe_this_day)) +#BREAK
geom_point(aes(x=death_this_day))
dat_swim$id
dat_swim %>% select(id, max_day)
dat_swim %>% select(id, max_day) %>% arrange(d)
dat_swim %>% select(id, max_day) %>% arrange(id)
?fct_reorder
dat_reorder <-
dat_long |>
group_by(id) |>
mutate(max_day = max(day)) |>
ungroup() |>
mutate(id = fct_reorder(factor(id), max_day))
dat_reorder$id
?include_graphics
